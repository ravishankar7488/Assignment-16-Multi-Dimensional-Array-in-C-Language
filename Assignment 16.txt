                                                                Assignment - 16 A Job Ready Bootcamp in C++, DSA and IOT MySirG

                                                                             Multi-Dimensional Array in C Language
____________________________________________________________________________________________________________________________________________________________________________________________

1. Write a program to calculate the sum of two matrices each of order 3x3.

Ans.
#include<iostream>
using namespace std;
void sum(int (*)[3],int (*)[3]);

int main() {
	int mat1[3][3],mat2[3][3],i,j,count=0;

	for(i=0; i<3; i++) {
		for(j=0; j<3; j++) {
			mat1[i][j]=++count;
			mat2[i][j]=mat1[i][j];
		}
	}
	sum(mat1,mat2);
	for(i=0; i<3; i++) {
		for(j=0; j<3; j++) {
			cout<<mat2[i][j]<<" ";
		}
		cout<<endl;
	}
	return 0;
}
void sum(int(*m1)[3],int(*m2)[3]){
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			*(*(m2+i)+j)+=*(*(m1+i)+j);
		}
	}
}


2. Write a program to calculate the product of two matrices each of order 3x3.


Ans.#include<iostream>
using namespace std;
//int* product(int(*)[3],int (*)[3]);

void product(int(*m1)[3],int(*m2)[3]) {
	int m3[3][3];
	int value=0;
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			for(int l=0; l<3; l++) {
				value+=m1[i][l]*m2[l][j];
			}
			m3[i][j]=value;
			value=0;

		}
		
	}
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			cout<<m3[i][j]<<" ";
		}
		cout<<endl;
	}
}

int main() {
	int mat1[3][3],mat2[3][3],i,j,count=0;

	for(i=0; i<3; i++) {
		for(j=0; j<3; j++) {
			mat1[i][j]=++count;
			mat2[i][j]=mat1[i][j];
		}
	}
	product(mat1,mat2);
	
	return 0;
}

3. Write a program in C to find the transpose of a given matrix.

ANs.#include<iostream>
#define ROW 3
#define COLUMN 4
using namespace std;
int main() {
	int mat1[ROW][COLUMN],mat2[COLUMN][ROW],count=0;
	for(int i=0; i<ROW; i++) {
		for(int j=0; j<COLUMN; j++) {
			mat1[i][j]=++count;
		}
	}
		for(int i=0; i<COLUMN; i++) {
		for(int j=0; j<ROW; j++) {
			mat2[i][j]=mat1[j][i];
		}
	}
	
	cout<<"Original Matrix:-"<<endl;
	for(int i=0; i<ROW; i++) {
		for(int j=0; j<COLUMN; j++) {
			cout<<mat1[i][j]<<" ";
		}cout<<endl;
	}
	cout<<endl<<"Transpose Matrix:-"<<endl;
		for(int i=0; i<COLUMN; i++) {
		for(int j=0; j<ROW; j++) {
			cout<<mat2[i][j]<<" ";
		}cout<<endl;
	}
	return 0;
}


4. Write a program in C to find the sum of right diagonals of a matrix.

Ans.#include<iostream>
using namespace std;
int matrix_r_d_s(int (*)[3]);

int main() {
	int mat[3][3];
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			cout<<"Matrix["<<i<<"]["<<j<<"] :";
			cin>>mat[i][j];
		}
	}
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			cout<<" "<<mat[i][j]<<" ";
		}cout<<endl;
	}
	
	cout<<endl<<"Sum of right diagonal of Matrix : "<<matrix_r_d_s(mat);
	return 0;
}
int matrix_r_d_s(int (*mat)[3]) {
	int sum=0;
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			if(i==j) {
				sum+=mat[i][j];
			}
		}
	}
	return sum;
}



5. Write a program in C to find the sum of left diagonals of a matrix.

Ans.#include<iostream>
using namespace std;
int matrix_l_d_s(int (*)[3]);

int main() {
	int mat[3][3];
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			cout<<"Matrix["<<i<<"]["<<j<<"] :";
			cin>>mat[i][j];
		}
	}
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			cout<<" "<<mat[i][j]<<" ";
		}cout<<endl;
	}
	
	cout<<endl<<"Sum of Left diagonal of Matrix : "<<matrix_l_d_s(mat);
	return 0;
}
int matrix_l_d_s(int (*mat)[3]) {
	int sum=0;
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			if(i+j==2) {
				sum+=mat[i][j];
			}
		}
	}
	return sum;
}



6. Write a program in C to find the sum of rows and columns of a Matrix.

Ans.#include<iostream>
using namespace std;
int main() {
	int mat[3][3],count=0;
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			mat[i][j]=++count;
		}
	}

	for(int i=0; i<3; i++) {
		int sum=0;
		for(int j=0; j<3; j++) {
			cout<<mat[i][j]<<" ";
			sum+=mat[i][j];
		}
		cout<<" -> Sum of Row "<<i<<" :"<<sum;
		cout<<endl;
	}
	cout<<endl<<endl;
	for(int i=0; i<3; i++) {
		int sum=0;
		for(int j=0; j<3; j++) {
			cout<<mat[i][j]<<" ";
			sum+=mat[j][i];
		}
		cout<<" -> Sum of Columns "<<i<<" :"<<sum;
		cout<<endl;
	}
	
	return 0;
}


7. Write a program in C to print or display the lower triangular of a given matrix.

Ans. #include<iostream>
using namespace std;
int main() {
	int mat[3][3],count=0;
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			mat[i][j]=++count;
		}
	}
	for (int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			if(j<=(2-i))cout<<mat[i][j]<<" ";
			else cout<<" ";
		}cout<<endl;
	}
	return 0;
}


8. Write a program in C to print or display an upper triangular matrix.

Ans.#include<iostream>
using namespace std;
int main() {
	int mat[3][3],count=0;
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			mat[i][j]=++count;
		}
	}
	for (int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			if(j<(2-i))cout<<"  ";
			else cout<<mat[i][j]<<" ";
		}cout<<endl;
	}
	return 0;
}



9. Write a program in C to accept a matrix and determine whether it is a sparse matrix.

Ans.#include<iostream>
using namespace std;
#define ROW 3
#define COLUMN 3
int main() {
	int count=0,large=0,rn;
	int mat[3][3];
	for(int i=0; i<ROW; i++) {
		for(int j=0; j<COLUMN; j++) {
			cin>>mat[i][j];
		}
	}

	for(int i=0; i<ROW; i++) {
		for(int j=0; j<COLUMN; j++) {
			cout<<mat[i][j]<<"  ";
		}
		cout<<endl;
	}

	for(int i=0; i<ROW; i++) {
		for(int j=0; j<COLUMN; j++) {
			if(mat[i][j]==0)count++;
		}
	}
	if(count>((ROW*COLUMN)/2))cout<<endl<<"Sparse Matrix : True";
	else cout<<endl<<"Sparse Matrix : False";
}


10. Write a program in C to find the row with maximum number of 1s.

Ans.#include<iostream>
using namespace std;
int main() {
	int count=0,large=0,rn;
	int mat[3][3];
	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			cin>>mat[i][j];
		}
	}

	for(int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			cout<<mat[i][j]<<"  ";
		}
		cout<<endl;
	}

	for (int i=0; i<3; i++) {
		for(int j=0; j<3; j++) {
			if	(mat[i][j]==1) {
				count++;
			}
		}
		if(count>large){large=count;
		rn=i;
		count=0;
		}
	}
	
	cout<<endl<<"Row Number "<<rn<<" Has Maximum("<<large<<") number of 1s ";
	return 0;
}
